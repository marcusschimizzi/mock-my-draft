name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - uses: nrwl/nx-set-shas@v3
      - run: npx nx affected --target=lint --parallel=3
      - run: npx nx affected --target=test --parallel=3 --configuration=ci
      - run: npx nx affected --target=build --parallel=3

  docker:
    runs-on: ubuntu-latest
    needs: main
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker images
        run: |
          AFFECTED_APPS=$(npx nx print-affected --select=projects)
          for app in $AFFECTED_APPS
          do
            if [[ "$app" == "main" || "$app" = "admin" ]]; then
              DOCKERFILE="tools/docker/Dockerfile.nextjs"
            elif [[ "$app" == "api" ]]; then
              DOCKERFILE="tools/docker/Dockerfile.node"
            else
              echo "Unknown app type for $app, skipping..."
              continue
            fi

            docker build -t ${{ secrets.DOCKER_USERNAME }}/$app:${{ github.sha }} \
              -f $DOCKERFILE \
              --build-arg APP_NAME=$app \
              .
            docker push ${{ secrets.DOCKER_USERNAME }}/$app:${{ github.sha }}
            docker push ${{ secrets.DOCKER_USERNAME }}/$app:latest
          done

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: docker
  #   steps:
  #     - name: Deploy to Digital Ocean
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.DIGITAL_OCEAN_HOST }}
  #         username: ${{ secrets.DIGITAL_OCEAN_USERNAME }}
  #         key: ${{ secrets.DIGITAL_OCEAN_SSH_KEY }}
  #         script: |
  #           cd /mock-my-draft
  #           docker-compose pull
  #           docker-compose up -d
